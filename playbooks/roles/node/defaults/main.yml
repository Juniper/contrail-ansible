---
cloud_orchestrator: openstack
# os_release - operaing system release code
# ubuntu 14.04 - u14.04, ubuntu 16.04 - u16.04, centos 7.1 - c7.1
valid_os_release: [u14.04, u16.04, c7.1, c7.2, redhat7, centos7]
os_release: u14.04
lb_image: >-
  {%- if docker_registry is defined and load_contrail_lb_image is not defined -%}{{ docker_registry }}/contrail-lb-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-lb-{{ os_release }}:{{ contrail_version }}{%- endif %}
controller_image: >-
  {%- if docker_registry is defined and load_contrail_controller_image is not defined -%}{{ docker_registry }}/contrail-controller-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-controller-{{ os_release }}:{{ contrail_version }}{%- endif %}
analytics_image: >-
  {%- if docker_registry is defined and load_contrail_analytics_image is not defined -%}{{docker_registry}}/contrail-analytics-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-analytics-{{ os_release }}:{{ contrail_version }}{%- endif %}
analyticsdb_image: >-
  {%- if docker_registry is defined and load_contrail_analyticsdb_image is not defined -%}{{docker_registry}}/contrail-analyticsdb-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-analyticsdb-{{ os_release }}:{{ contrail_version }}{%- endif %}
agent_image: >-
  {%- if docker_registry is defined and load_contrail_agent_image is not defined -%}{{docker_registry}}/contrail-agent-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-agent-{{ os_release }}:{{ contrail_version }}{%- endif %}
vrouter_compiler_image_centos7: >-
  {%- if docker_registry is defined and load_contrail_vrouter_module_compiler_centos7_image is not defined -%}{{docker_registry}}/contrail-vrouter-compiler-c7.1:{{ contrail_version }}
  {%- else %}contrail-vrouter-compiler-c7.1:{{ contrail_version }}{%- endif %}
contrail_kube_manager_image: >-
  {%- if docker_registry is defined and load_contrail_kube_manager_image is not defined -%}{{docker_registry}}/contrail-kube-manager-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-kube-manager-{{ os_release }}:{{ contrail_version }}{%- endif %}
contrail_mesos_manager_image: >-
  {%- if docker_registry is defined and load_contrail_mesos_manager_image is not defined -%}{{docker_registry}}/contrail-mesos-manager-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-mesos-manager-{{ os_release }}:{{ contrail_version }}{%- endif %}
contrail_repo_ubuntu_image: >-
  {%- if docker_registry is defined and load_contrail_repo_ubuntu_image is not defined -%}{{docker_registry}}/contrail-repo-{{ os_release }}:{{ contrail_version }}
  {%- else %}contrail-repo-{{ os_release }}:{{ contrail_version }}{%- endif %}
contrail_repo_centos_image: >-
  {%- if docker_registry is defined and load_contrail_repo_centos_image is not defined -%}{{docker_registry}}/contrail-repo-c7.1:{{ contrail_version }}
  {%- else %}contrail-repo-c7.1:{{ contrail_version }}{%- endif %}
contrail_repo_redhat_image: >-
  {%- if docker_registry is defined and load_contrail_repo_redhat_image is not defined -%}{{docker_registry}}/contrail-repo-{{os_release}}:{{ contrail_version }}
  {%- else %}contrail-repo-{{os_release}}:{{ contrail_version }}{%- endif %}


always_pull_image: false

docker_py_version: 1.9.0

container_agent_extra_env: {}
external_vrouter_compile: false
kernel_source_packages: []

# docker_image_load_path: In case of no docker_registry, load the images from tar files under this path
docker_image_load_path: "{{playbook_dir}}/container_images"
contrail_lb_image_archive: "contrail-lb-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_controller_image_archive: "contrail-controller-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_analytics_image_archive: "contrail-analytics-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_analyticsdb_image_archive: "contrail-analyticsdb-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_agent_image_archive: "contrail-agent-{{ os_release }}-{{ contrail_version }}.tar.gz"
vrouter_module_compiler_centos7_image_archive: "contrail-vrouter-compiler-c7.1-{{ contrail_version }}.tar.gz"
contrail_kube_manager_image_archive: "contrail-kube-manager-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_mesos_manager_image_archive: "contrail-mesos-manager-{{ os_release }}-{{ contrail_version }}.tar.gz"
contrail_repo_ubuntu_image_archive: "contrail-repo-ubuntu-{{ contrail_version }}.tar.gz"
contrail_repo_centos_image_archive: "contrail-repo-c7.1-{{ contrail_version }}.tar.gz"
contrailctl_config_directory: /etc/contrailctl
contrail_apt_repo_port: 1567
contrail_yum_repo_port: "{{ contrail_apt_repo_port }}"
contrail_repo_ip: "{{ hostvars[groups['contrail-repo'][0]].get('ansible_default_ipv4', {}).get('address','') | default('') if 'contrail-repo' in groups else ''}}"
contrail_apt_repo: "{{ contrail_repo_ip | ternary('http://' + contrail_repo_ip + ':' + contrail_apt_repo_port|string, '') if 'contrail-repo' in groups else ''}}"
contrail_yum_repo: "{{ contrail_repo_ip | ternary('http://' + contrail_repo_ip + ':' + contrail_yum_repo_port|string, '') if 'contrail-repo' in groups else ''}}"

# contrailctl_config_mode should be either
#  configure - let ansible write contrailctl config entries using inifile module
#  copy - ansible skip writnig confg entries, but expect the config files in specific location and it just deploy those files
contrailctl_config_mode: configure

controller_ip: "{{ controller_list[0] | default('') }}"
analytics_ip: "{{ analytics_list[0] | default('') }}"

# Volumes to be mounted to the containers
contrail_container_volumes:
  - "{{ contrailctl_config_directory }}:/etc/contrailctl/"

# In case of openshift, /etc/origin need to be mounted to the kube_manager container
#  which contain certs to connect with openshift master
openshift_cert_volumes:
  - "/etc/origin:/etc/origin"

kube_manager_container_volumes: "{{ contrail_container_volumes + openshift_cert_volumes if cloud_orchestrator == 'openshift' else contrail_container_volumes }}"

contrail_compute_mode: "container"
config_server_list: []
config_server_list_derived: []
config_ip: "{{ controller_list[0] }}"

# contrail-cni for mesos and contrail-kub-cni for others
contrail_cni_package_name: "{{ 'contrail-cni' if cloud_orchestrator == 'mesos' else 'contrail-kube-cni' }}"

container_image_load_timeout: 300

# SSL Cert directoy and paths
ssl_certs_supplied: "{{ true if ssl_certs_src_dir else false }}"
ssl_cert_days_valid: 3640
ssl_certs_src_dir: ""
ssl_ca_cert_src_dir: "{{ ssl_certs_src_dir if ssl_certs_src_dir else ssl_certs_dir }}"
ssl_cert_subj: "/CN={{ ansible_fqdn }}"
self_signed_ssl_cert: true
ssl_certs_dir: "/etc/contrail/ssl"
ssl_cert_key_path: "{{ ssl_certs_dir }}/ca-cert-privkey.pem"
ssl_cert_path: "{{ ssl_certs_dir }}/ca-cert.pem"
