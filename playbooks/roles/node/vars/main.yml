---
compute_nodes: "{{ compute_list | join(',') }}"
analytics_nodes: "{{ analytics_list | join(',') }}"
analyticsdb_nodes: "{{ analyticsdb_list | join(',') }}"
controller_nodes_tmp:  "{{ controller_ll_ip_list if nested_mode else controller_list }}"
controller_nodes: "{{ controller_nodes_tmp | join(',') }}"
global_config_detected:
  cloud_orchestrator: "{{ cloud_orchestrator }}"
  controller_nodes: "{{ controller_nodes }}"
  analytics_nodes: "{{ analytics_nodes }}"
  analyticsdb_nodes: "{{ analyticsdb_nodes }}"
  compute_nodes: "{{ compute_nodes }}"
  config_ip: "{{ config_ip }}"
  controller_ip: "{{ controller_ip }}"
  analytics_ip: "{{ analytics_ip }}"
  enable_config_service: "{{ enable_config_service }}"
  enable_control_service: "{{ enable_control_service }}"
  enable_webui_service: "{{ enable_webui_service }}"
  config_nodes: "{{ config_nodes if config_nodes else config_server_list_derived | join(',') }}"
  sandesh_ssl_enable: "{{ sandesh_ssl_enable }}"
  introspect_ssl_enable: "{{ introspect_ssl_enable }}"

webui_config_orig: "{{ webui_config | default({}) | combine({'webui_storage_enable': webui_storage_enable}) }}"
agent_compile_vrouter_module_orig: "{{(agent_compile_vrouter_module is defined) | ternary(agent_compile_vrouter_module, 'undef')}}"
global_config_orig: "{{ global_config_detected | combine(global_config|default({})) | combine(global_config_extra|default({})) }} "
non_bare_metal_vrouter_compile: "{{ (agent_compile_vrouter_module_orig != 'undef') | ternary(agent_compile_vrouter_module_orig|ternary(true, false), external_vrouter_compile|ternary(false,true)) }}"

#For bare-metal compute in Debian, make sure  compile_vrouter_module is not true
compile_vrouter_module_orig: "{{ (contrail_compute_mode == 'bare_metal') | ternary(false, non_bare_metal_vrouter_compile) }}"
agent_config_orig: "{{ agent_config | default({}) | combine(\
  {'compile_vrouter_module': compile_vrouter_module_orig,\
  'vrouter_physical_interface': vrouter_physical_interface\
  })}}"

ceph_controller_config: "{{ ceph_config | default({}) |                        \
                     combine({'ceph_monname_list': ceph_hostname_list,         \
                              'ceph_monip_list'  : ceph_controller_list,       \
                              'cluster_fsid'     : storage_ceph_config.fsid,   \
                              'mon_key'          : storage_ceph_config.mon_key,\
                              'adm_key'          : storage_ceph_config.adm_key,\
                              'osd_key'          : storage_ceph_config.osd_key,\
                              'ceph_rest_api_port': ceph_rest_api_port,        \
                              'enable_stats_daemon': enable_stats_daemon       \
                            }) }}"

controller_group: "{{ groups['contrail-controllers'] | default([]) }}"
analytics_group: "{{ groups['contrail-analytics'] | default([]) }}"
analyticsdb_group: "{{ groups['contrail-analyticsdb'] | default([]) }}"
compute_group: "{{ groups['contrail-compute'] | default([]) }}"
ceph_controller_group: "{{ groups['ceph-controller'] | default([]) }}"
kubernetes_config:
  cluster_name: "{{ kubernetes_cluster_name | default('k8s-default') }}"
  cluster_network: "{{ nested_cluster_network|default({})|to_json }}"
  token: "{{ kubernetes_access_token | default('') }}"
