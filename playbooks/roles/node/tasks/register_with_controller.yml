---
- name: "Register nodes, Wait till config api server answers"
  shell: "docker exec controller curl -s -o /dev/null --write-out %{http_code} -u{{ keystone_admin_user }}:{{ keystone_admin_password }} http://localhost:{{ api_server_admin_port }}"
  register: curl_result
  until: curl_result.stdout == "200"
  delay: 1
  retries: 180

- name: "update ASN in the global_system_config, api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --use_admin_api \
         --router_asn {{ router_asn }} \
         {{ orchestrator_opts }}"
  when: api_aaa_mode != 'no-auth'

- name: "update ASN in the global_system_config, no api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --api_server_ip 127.0.0.1 \
         --router_asn {{ router_asn }} \
         {{ orchestrator_opts }}"
  when: api_aaa_mode == 'no-auth'

- name: "Register control node with controller, no md5 and api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --use_admin_api \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --router_asn {{ router_asn }} \
         --oper add \
         {{ local_asn_opts }} \
         {{ orchestrator_opts }}"
  with_dict: "{{ controlnode_ip_hostname_dict | default ({}) }}"
  when: item.value == ansible_hostname and api_aaa_mode != 'no-auth' and bgp_md5 == ''

- name: "Register control node with controller, no md5 and no api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --router_asn {{ router_asn }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ local_asn_opts }} \
         {{ orchestrator_opts }}"
  with_dict: "{{ controlnode_ip_hostname_dict | default ({}) }}"
  when: item.value == ansible_hostname and api_aaa_mode == 'no-auth' and bgp_md5 == ''

- name: "Register control node with controller, md5 and api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --use_admin_api \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --router_asn {{ router_asn }} \
         --md5 {{ bgp_md5 }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ controlnode_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode != 'no-auth' and bgp_md5 != ''

- name: "Register control node with controller, md5 and no api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_control.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --router_asn {{ router_asn }} \
         --md5 {{ bgp_md5 }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ controlnode_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode == 'no-auth' and bgp_md5 != ''

- name: "Register external routers, api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_mx.py --use_admin_api \
          {{ orchestrator_opts }} --router_name {{ item.key }} \
          --router_ip  {{ item.value }} --router_asn {{ router_asn }}"
  with_dict: "{{ external_routers_list }}"
  when: api_aaa_mode != 'no-auth'

- name: "Register external routers, no api auth"
  shell: "docker exec controller /usr/share/contrail-utils/provision_mx.py \
          --api_server_ip 127.0.0.1 \
          {{ orchestrator_opts }} --router_name {{ item.key }} \
          --router_ip  {{ item.value }} --router_asn {{ router_asn }}"
  with_dict: "{{ external_routers_list }}"
  when: api_aaa_mode == 'no-auth'

- name: "Register analytics node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_analytics_node.py \
         --use_admin_api \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ analytics_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode != 'no-auth'

- name: "Register analytics node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_analytics_node.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ analytics_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode == 'no-auth'

- name: "Register analyticsdb node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_database_node.py \
         --use_admin_api \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ analyticsdb_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode != 'no-auth'

- name: "Register analyticsdb node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_database_node.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }}"
  with_dict: "{{ analyticsdb_ip_hostname_dict | default ({}) }}"
  when: api_aaa_mode == 'no-auth'

- name: "Register compute node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_vrouter.py \
         --use_admin_api \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }} \
         {{ '--dpdk_enabled' if hostvars[compute_ctrl_ip_mgmt_ip_dict[item.key]].get('huge_pages') else '' }}"
  with_dict: "{{ compute_ip_hostname_dict | default({}) }}"
  when: cloud_orchestrator == 'openstack' and api_aaa_mode != 'no-auth'

- name: "Register compute node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_vrouter.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }} \
         {{ '--dpdk_enabled' if hostvars[compute_ctrl_ip_mgmt_ip_dict[item.key]].get('huge_pages') else '' }}"
  with_dict: "{{ compute_ip_hostname_dict | default({}) }}"
  when: cloud_orchestrator == 'openstack' and api_aaa_mode == 'no-auth'

- name: "Register esxi compute node with controller"
  shell: "docker exec controller /usr/share/contrail-utils/provision_vrouter.py \
         --api_server_ip 127.0.0.1 \
         --host_name {{ item.value }} \
         --host_ip {{ item.key }} \
         --oper add \
         {{ orchestrator_opts }} \
         {{ '--dpdk_enabled' if hostvars[compute_ctrl_ip_mgmt_ip_dict[item.key]].get('huge_pages') else '' }}"
  with_dict: "{{ compute_ip_hostname_dict | default({}) }}"
  when: cloud_orchestrator == 'vcenter'

