---
# python-paramiko and ecdsa installed as workaround for bug https://bugs.launchpad.net/juniperopenstack/+bug/1669918
# contrail-vrouter-dkms installed as workaround for bug https://bugs.launchpad.net/juniperopenstack/+bug/1664421
kernel_compute_packages:
  - contrail-vrouter-dkms
  - contrail-vrouter-common

dpdk_compute_packages:
  - contrail-vrouter-dpdk-init
  - contrail-vrouter-common

vrouter_physical_interface: "{{ ansible_default_ipv4.interface }}"
vrouter_physical_ansible_interface: "ansible_{{ vrouter_physical_interface | regex_replace('-', '_') }}"
vhost_interface: vhost0

# vhost_ansible_interface is ansible_{{vhost_interface}} in case of vhost0 is
# added, otherwise it is vrouter_physical_ansible_interface
vhost_ansible_interface: "{{ 'ansible_' + vhost_interface if vhost_interface in ansible_interfaces else vrouter_physical_ansible_interface }}"

vhost_address: "{{ hostvars[inventory_hostname][vhost_ansible_interface]['ipv4']['address'] }}"

non_mgmt_ip_config: "--non_mgmt_ip {{ vhost_address }}"
single_intf_config: ""
multi_intf_config: "{{ non_mgmt_ip_config if vhost_address != ansible_default_ipv4.address else single_intf_config }}"
no_of_controllers: "{{ controller_list | length }}"
vrouter_max_control_nodes: 3
contrail_compute_mode: "bare_metal"
hypervisor: "libvirt"

ssl_certs_dir: "/etc/contrail/ssl"
xmpp_auth_enable: False
sandesh_ssl_enable: False
introspect_ssl_enable: False
vrouter_agent_conf: "/etc/contrail/contrail-vrouter-agent.conf"

# contrail-coompute-setup args and flags
xmpp_auth_flag: "{{ '--xmpp_auth_enable' if xmpp_auth_enable else '' }}"
collectors_arg: "{{ '--collectors ' + collectors_with_space_delim }}"
control_nodes_arg: "{{ '--control-nodes ' + controllers_with_space_delim }}"
sandesh_ssl_flag: "{{ '--sandesh_ssl_enable' if sandesh_ssl_enable else '' }}"
introspect_ssl_flag: "{{ '--introspect_ssl_enable' if introspect_ssl_enable else '' }}"

# Dpdk defaults
dpdk_huge_pages: "{{ hostvars[inventory_hostname].get('huge_pages') | default('')}}"
dpdk_coremask: "{{ hostvars[inventory_hostname].get('coremask') | default('')}}"
dpdk_uio_driver: "{{ hostvars[inventory_hostname].get('uio_driver') | default('')}}"

mandatory_dpdk_params: "{{ 'coremask=' + dpdk_coremask + ',huge_pages=' + dpdk_huge_pages if dpdk_huge_pages else '' }}"
optional_dpdk_params: "{{ ',uio_driver=' + dpdk_uio_driver if dpdk_uio_driver else '' }}"
dpdk_params: "{{ mandatory_dpdk_params + optional_dpdk_params }}"
dpdk_config: "{{ '--dpdk ' + dpdk_params if dpdk_params else '' }}"

# compute packages
compute_packages: "{{ dpdk_compute_packages if dpdk_config else kernel_compute_packages }}"
