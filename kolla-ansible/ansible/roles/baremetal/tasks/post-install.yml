---
- name: Ensure docker service directory exists
  file:
      path=/etc/systemd/system/docker.service.d
      state=directory
      recurse=yes
  become: True
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "14") or
        (ansible_os_family == "RedHat") or (ansible_distribution == "Debian")

- stat:
    path: /etc/systemd/system/docker.service.d/registry.conf
  register: p

- shell: cat /etc/systemd/system/docker.service.d/registry.conf
  register: registry
  when: p.stat.exists

- set_fact:
    insecure_registry: "--insecure-registry {{docker_registry}}"

- set_fact:
    registries: "{{ registry.stdout | regex_findall('--insecure-registry [0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}:[0-9]{1,4}')}} + [insecure_registry]"
  when: p.stat.exists

- set_fact:
    registry_is_in: true
  when: item == insecure_registry
  with_items: "{{ registries }}"
  when: p.stat.exists

- copy:
    content: ""
    dest: /etc/systemd/system/docker.service.d/registry.conf

- lineinfile:
    path: /etc/systemd/system/docker.service.d/registry.conf
    line: "[Service]\nMountFlags=shared\nExecStart=\nExecStart=/usr/bin/docker daemon {{ registries | join(' ') }}"
  when: p.stat.exists and insecure_registry is defined

- lineinfile:
    path: /etc/systemd/system/docker.service.d/registry.conf
    line: "[Service]\nMountFlags=shared\nExecStart=\nExecStart=/usr/bin/docker daemon {{ insecure_registry }}"
  when: not p.stat.exists

- name: Reload docker service file
  become: True
  command: systemctl daemon-reload
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version > "14") or
        (ansible_os_family == "RedHat") or (ansible_distribution == "Debian")

- name: Configure docker service
  become: True
  template:
     src=docker_defaults.j2
     dest=/etc/default/docker
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "15")

- name: Docker mount shared
  command: mount --make-shared /run
  become: True
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "15")

- name: Get stat of libvirtd apparmor profile
  stat: path=/etc/apparmor.d/usr.sbin.libvirtd
  register: apparmor_libvirtd_profile
  when: ansible_distribution == "Ubuntu"

- name: Remove apparmor profile for libvirt
  command: apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
  become: True
  when:
    - ansible_distribution == "Ubuntu"
    - apparmor_libvirtd_profile.stat.exists | bool
  ignore_errors: yes

- name: Create docker group
  group:
     name: docker
  become: True

- name: Add kolla user to docker group
  user:
     name: kolla
     append: yes
     groups: docker
  become: True
  when: create_kolla_user | bool

- name: Start docker
  service:
     name: docker
     state: started
  become: True

- name: Restart docker
  service:
     name: docker
     state: restarted
  become: True

- name: Enable docker
  service:
     name: docker
     enabled: yes
  become: True

- name: Reboot
  command: reboot -f
  become: True
  when:
   - reboot_required is defined
   - reboot_required | bool
